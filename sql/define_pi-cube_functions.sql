-- DROP TABLE PI_CUBE CASCADE;

CREATE TABLE IF NOT EXISTS PI_CUBE (
    space_layer integer,
    time_layer integer,
    tile_x bigint,
    tile_y bigint,
    "time" integer,
    cnt bigint,
    cnt_log double precision
);

-- 

DROP FUNCTION GET_BASE_TILE_SIZE CASCADE;
CREATE FUNCTION GET_BASE_TILE_SIZE()
RETURNS FLOAT
BEGIN
   DECLARE MAX_X BIGINT;
   DECLARE MIN_X BIGINT;
   DECLARE BASE_TILE_SIZE FLOAT;

   SELECT MAX(TILE_X) INTO MAX_X FROM CUBED_PYRAMID WHERE SPACE_LAYER=0;
   SELECT MIN(TILE_X) INTO MIN_X FROM CUBED_PYRAMID WHERE SPACE_LAYER=0;
   SET BASE_TILE_SIZE = (MAX_X - MIN_X) / 512;

   RETURN BASE_TILE_SIZE;
END;

-- 

INSERT INTO PI_CUBE
  SELECT
     1,
     1,
     CAST(TILE_X / BASE_TILE_SIZE2 AS BIGINT) AS TILE_X_GROUP,
     CAST(TILE_Y / BASE_TILE_SIZE2 AS BIGINT) AS TILE_Y_GROUP,
     CAST(TIME / BASE_TIME_INTERVAL AS INTEGER) AS TIME_GROUP,
     SUM(CNT) AS CNT,
	 LOG10(SUM(CNT)) AS CNT_LOG
  FROM
     CUBED_PYRAMID
  WHERE
     SPACE_LAYER = 0 AND TIME_LAYER = 0
  GROUP BY
     TILE_X_GROUP,
     TILE_Y_GROUP,
     TIME_GROUP
  HAVING CNT > 10;
